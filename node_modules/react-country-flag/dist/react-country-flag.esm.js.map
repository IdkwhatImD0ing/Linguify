{"version":3,"file":"react-country-flag.esm.js","sources":["../src/index.tsx"],"sourcesContent":["import * as React from 'react';\n\nconst DEFAULT_CDN_URL =\n  'https://cdn.jsdelivr.net/gh/lipis/flag-icons/flags/4x3/';\nconst DEFAULT_CDN_SUFFIX = 'svg';\n\n// offset between uppercase ascii and regional indicator symbols\nconst OFFSET = 127397;\n\ninterface EmojiProps extends React.HTMLAttributes<HTMLSpanElement> {\n  cdnSuffix?: string;\n  cdnUrl?: string;\n  countryCode: string;\n  style?: React.CSSProperties;\n  svg?: false;\n}\n\ninterface ImgProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  cdnSuffix?: string;\n  cdnUrl?: string;\n  countryCode: string;\n  style?: React.CSSProperties;\n  svg?: true;\n}\n\nexport type ReactCountryFlagProps = EmojiProps | ImgProps;\n\nexport const ReactCountryFlag = ({\n  cdnSuffix = DEFAULT_CDN_SUFFIX,\n  cdnUrl = DEFAULT_CDN_URL,\n  countryCode,\n  style,\n  svg = false,\n  ...props\n}: ReactCountryFlagProps) => {\n  if (typeof countryCode !== 'string') {\n    return null;\n  }\n\n  if (svg) {\n    const flagUrl = `${cdnUrl}${countryCode.toLowerCase()}.${cdnSuffix}`;\n\n    return (\n      <img\n        {...props}\n        src={flagUrl}\n        style={{\n          display: 'inline-block',\n          width: '1em',\n          height: '1em',\n          verticalAlign: 'middle',\n          ...style,\n        }}\n      />\n    );\n  }\n\n  const emoji = countryCode\n    .toUpperCase()\n    .replace(/./g, char => String.fromCodePoint(char.charCodeAt(0) + OFFSET));\n\n  return (\n    <span\n      role=\"img\"\n      {...props}\n      style={{\n        display: 'inline-block',\n        fontSize: '1em',\n        lineHeight: '1em',\n        verticalAlign: 'middle',\n        ...style,\n      }}\n    >\n      {emoji}\n    </span>\n  );\n};\n\nexport default ReactCountryFlag;\n"],"names":["DEFAULT_CDN_URL","DEFAULT_CDN_SUFFIX","OFFSET","ReactCountryFlag","_ref","cdnSuffix","_ref$cdnSuffix","_ref$cdnUrl","cdnUrl","countryCode","style","_ref$svg","svg","props","_objectWithoutPropertiesLoose","_excluded","flagUrl","toLowerCase","React","src","_extends","display","width","height","verticalAlign","emoji","toUpperCase","replace","char","String","fromCodePoint","charCodeAt","role","fontSize","lineHeight"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,eAAe,GACnB,yDAAyD;AAC3D,IAAMC,kBAAkB,GAAG,KAAK;AAEhC;AACA,IAAMC,MAAM,GAAG,MAAM;IAoBRC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,IAAA;4BAC3BC,SAAS;IAATA,SAAS,GAAAC,cAAA,cAAGL,kBAAkB,GAAAK,cAAA;IAAAC,WAAA,GAAAH,IAAA,CAC9BI,MAAM;IAANA,MAAM,GAAAD,WAAA,cAAGP,eAAe,GAAAO,WAAA;IACxBE,WAAW,GAAAL,IAAA,CAAXK,WAAW;IACXC,KAAK,GAAAN,IAAA,CAALM,KAAK;IAAAC,QAAA,GAAAP,IAAA,CACLQ,GAAG;IAAHA,GAAG,GAAAD,QAAA,cAAG,KAAK,GAAAA,QAAA;IACRE,KAAK,GAAAC,6BAAA,CAAAV,IAAA,EAAAW,SAAA;EAER,IAAI,OAAON,WAAW,KAAK,QAAQ,EAAE;IACnC,OAAO,IAAI;;EAGb,IAAIG,GAAG,EAAE;IACP,IAAMI,OAAO,QAAMR,MAAM,GAAGC,WAAW,CAACQ,WAAW,EAAE,SAAIZ,SAAW;IAEpE,OACEa,uCACML,KAAK;MACTM,GAAG,EAAEH,OAAO;MACZN,KAAK,EAAAU,QAAA;QACHC,OAAO,EAAE,cAAc;QACvBC,KAAK,EAAE,KAAK;QACZC,MAAM,EAAE,KAAK;QACbC,aAAa,EAAE;SACZd,KAAK;OAEV;;EAIN,IAAMe,KAAK,GAAGhB,WAAW,CACtBiB,WAAW,EAAE,CACbC,OAAO,CAAC,IAAI,EAAE,UAAAC,KAAI;IAAA,OAAIC,MAAM,CAACC,aAAa,CAACF,KAAI,CAACG,UAAU,CAAC,CAAC,CAAC,GAAG7B,MAAM,CAAC;IAAC;EAE3E,OACEgB;IACEc,IAAI,EAAC;KACDnB,KAAK;IACTH,KAAK,EAAAU,QAAA;MACHC,OAAO,EAAE,cAAc;MACvBY,QAAQ,EAAE,KAAK;MACfC,UAAU,EAAE,KAAK;MACjBV,aAAa,EAAE;OACZd,KAAK;MAGTe,KAAK,CACD;AAEX;;;;;"}